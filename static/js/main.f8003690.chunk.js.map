{"version":3,"sources":["components/Verse/Verse.module.scss","i18n.js","components/Search/Search.js","components/Surah/Surah.js","components/ListSurah/ListSurah.js","pages/Home/Home.js","store/modules/main/getter.js","api/quranApi.js","store/modules/main/actionTypes.js","components/Verse/Verse.js","pages/Surah/Surah.js","routes/index.js","store/modules/main/actions.js","store/modules/global/actionTypes.js","store/modules/global/actions.js","components/InitialLoader/InitialLoader.js","components/Tasks/Tasks.js","components/Header/Header.js","App.js","store/modules/global/state.js","store/modules/global/reducer.js","store/modules/main/state.js","store/modules/main/reducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["module","exports","i18n","use","initReactI18next","init","resources","en","translation","hide_tafsir","show_tafsir","id","lng","interpolation","escapeValue","Search","onSearch","t","useTranslation","className","type","placeholder","onChange","connect","state","lang","global","surah","useState","tafsir","tafsirExceedMax","useMemo","length","to","number","name","transliteration","toLowerCase","replace","short","numberOfVerses","substr","ListSurah","list","map","main","filterSurah","q","filter","includes","listSurah","setListSurah","document","title","e","target","value","filteredSurah","baseURL","quranApi","axios","get","ayat","SET_LIST","SET_SURAH","verse","tafsirOpened","setTafsirOpened","tafsirEl","useRef","VerseStyles","inSurah","textArab","text","arab","controls","src","audio","primary","onClick","current","style","maxHeight","scrollHeight","ref","routes","path","exact","component","Home","findSurahByNumber","dispatch","fetchSurah","a","res","data","payload","Promise","resolve","reject","useParams","loading","setLoading","getSurah","useCallback","alert","useEffect","verses","index","SET_LANG","setLang","Loader","fetchQuran","children","tasks","setTasks","getQuran","catch","finally","prev","clone","splice","indexOf","setCurrentLang","currentLang","localStorage","getItem","changeLanguage","InitialLoader","selectedLang","setSelectedLang","langChangeHandler","newLang","setItem","App","route","globalState","globalReducer","mainState","mainReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8003690.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"verse\":\"Verse_verse__3_CGR\",\"tafsir\":\"Verse_tafsir__2ilTg\",\"textArab\":\"Verse_textArab__24RPJ\"};","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst resources = {\n  en: {\n    translation: {\n      'home.header.search': 'Find Surah',\n      'c.search.placeholder': 'Insert a keyword..',\n      't.see_more': 'See More',\n      't.verse': 'verses',\n      'list.not_found': \"Sorry we can't find anything..\",\n      hide_tafsir: 'Hide Tafsir',\n      show_tafsir: 'Show Tafsir',\n    },\n  },\n  id: {\n    translation: {\n      'home.header.search': 'Cari Surat',\n      'c.search.placeholder': 'Masukan kata kunci..',\n      't.see_more': 'Selengkapnya',\n      't.verse': 'ayat',\n      'list.not_found': 'Maaf kami tidak bisa menemukan apapun..',\n      hide_tafsir: 'Tutup Tafsir',\n      show_tafsir: 'Tampilkan Tafsir',\n    },\n  },\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n","import { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\n\nfunction Search({ onSearch }) {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"relative w-full md:w-3/5 mx-auto\">\n      {/* Icon */}\n      <i className=\"mdi mdi-magnify text-xl text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2\"></i>\n\n      {/* Input */}\n      <input\n        type=\"text\"\n        className=\"px-3 pl-10 py-2 w-full md:text-lg rounded-md focus:outline-none focus:ring focus:ring-green-500 transition-all\"\n        placeholder={t('c.search.placeholder')}\n        onChange={onSearch}\n      />\n    </div>\n  )\n}\n\nSearch.propTypes = {\n  onSearch: PropTypes.func,\n}\n\nexport default Search\n","import { useMemo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\n\nconst mapStateToProps = (state) => ({\n  lang: state.global.lang,\n})\n\nfunction Surah({ surah, lang }) {\n  const { t } = useTranslation()\n\n  const [tafsir] = useState(\n    surah.tafsir[lang] ? surah.tafsir[lang] : surah.tafsir['id']\n  )\n\n  const tafsirExceedMax = useMemo(() => {\n    return tafsir.length > 200\n  })\n\n  return (\n    <Link\n      to={`/surah/${surah.number}/${surah.name.transliteration[lang]\n        .toLowerCase()\n        .replace(/[^a-zA-Z-]/g, '')}`}\n    >\n      <div className=\"relative p-4 bg-white rounded-2xl transition-all hover:border-2 hover:border-green-400\">\n        <div className=\"flex justify-between items-center\">\n          {/* Number */}\n          <div className=\"float-left h-8 w-8 rounded-full text-white bg-green-400 number flex justify-center items-center font-bold\">\n            {surah.number}\n          </div>\n\n          {/* Name in arab */}\n          <div className=\"name-arab text-right text-arab text-4xl\">\n            {surah.name.short}\n          </div>\n        </div>\n\n        {/* Transliteration */}\n        <div className=\"name text-gray-700 text-right text-lg\">\n          {surah.name.transliteration[lang]}\n        </div>\n\n        {/* Verses */}\n        <div className=\"text-gray-500 ml-1 text-right\">\n          ({surah.numberOfVerses} {t('t.verse')})\n        </div>\n\n        {/* Translation */}\n        <p className=\"mt-1\">Translation: </p>\n        <div className=\"translation text-gray-500\">\n          <span>{surah.name.translation[lang]}</span>\n        </div>\n\n        {/* Tafsir */}\n        <div className=\"mt-2\">Tafsir: </div>\n        <div className=\"tafsir text-gray-500\">\n          <span>{tafsir.substr(0, 200)}..</span>\n          {tafsirExceedMax && (\n            <span className=\"text-gray-800 ml-2\">{t('t.see_more')}</span>\n          )}\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nSurah.propTypes = {\n  lang: PropTypes.string.isRequired,\n  surah: PropTypes.object.isRequired,\n}\n\nexport default connect(mapStateToProps)(Surah)\n","import { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\nimport Surah from 'components/Surah/Surah'\n\nfunction ListSurah({ list }) {\n  const { t } = useTranslation()\n\n  if (!list.length) {\n    return (\n      <div className=\"mt-8 text-center w-full text-xl lg:text-2xl text-green-800\">\n        <i className=\"mdi mdi-emoticon-sad-outline mr-2\"></i>\n        <span>{t('list.not_found')}</span>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5\">\n        {list.map((surah) => (\n          <Surah key={surah.number} surah={surah} />\n        ))}\n      </div>\n    )\n  }\n}\n\nListSurah.propTypes = {\n  list: PropTypes.array.isRequired,\n}\n\nexport default ListSurah\n","import { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport Search from 'components/Search/Search'\r\nimport ListSurah from 'components/ListSurah/ListSurah'\r\nimport { filterSurah } from 'store/modules/main/getter'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.main.list,\r\n  lang: state.global.lang,\r\n  filterSurah: (q) => filterSurah(state)(q),\r\n})\r\n\r\nfunction Home({ list, filterSurah }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [listSurah, setListSurah] = useState(list)\r\n\r\n  function onSearch(e) {\r\n    const q = e.target.value\r\n\r\n    if (q.length < 1) {\r\n      setListSurah(list)\r\n    } else {\r\n      const filteredSurah = filterSurah(q)\r\n\r\n      setListSurah(filteredSurah)\r\n    }\r\n  }\r\n\r\n  document.title = 'Al-Quran Digital'\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"mb-1 md:mb-4 text-2xl md:text-3xl lg:text-4xl text-green-800 text-center\">\r\n        <i className=\"mdi mdi-magnify mr-2\"></i>\r\n        {t('home.header.search')}\r\n      </p>\r\n\r\n      {/* Search */}\r\n      <Search onSearch={onSearch} />\r\n\r\n      {/* List Surah */}\r\n      <ListSurah list={listSurah}></ListSurah>\r\n    </div>\r\n  )\r\n}\r\n\r\nHome.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  filterSurah: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","export const findSurahByNumber = (state) => (number) => state.main.surah[number]\n\nexport const filterSurah = (state) => (q) =>\n  state.main.list.filter((surah) => {\n    const { translation, transliteration } = surah.name\n    const tafsir = surah.tafsir\n\n    // Find by transliteration\n    if (\n      transliteration.en.toLowerCase().includes(q) ||\n      transliteration.id.toLowerCase().includes(q)\n    ) {\n      return surah\n    }\n\n    // Find by translation\n    if (\n      translation.en.toLowerCase().includes(q) ||\n      translation.id.toLowerCase().includes(q)\n    ) {\n      return surah\n    }\n\n    // Find by tafsir\n    if (tafsir.id.toLowerCase().includes(q)) {\n      return surah\n    }\n  })\n","import axios from 'axios'\n\nconst baseURL = 'https://api.quran.sutanlab.id'\n\nconst quranApi = {\n  list() {\n    return axios.get(`${baseURL}/surah`)\n  },\n  surah(number) {\n    return axios.get(`${baseURL}/surah/${number}`)\n  },\n  ayat(number, ayat) {\n    return axios.get(`${baseURL}/surah/${number}/${ayat}`)\n  },\n}\n\nexport default quranApi\n","export const SET_LIST = 'SET_LIST'\nexport const SET_SURAH = 'SET_SURAH'\n","import { useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\nimport VerseStyles from './Verse.module.scss'\n\nconst mapStateToProps = (state) => ({\n  lang: state.global.lang,\n})\n\nfunction Verse({ verse, lang }) {\n  const { t } = useTranslation()\n  const [tafsirOpened, setTafsirOpened] = useState(false)\n\n  const tafsirEl = useRef(null)\n\n  function toggleTafsir() {\n    if (tafsirOpened) {\n      setTafsirOpened(false)\n      tafsirEl.current.style.maxHeight = 0\n    } else {\n      setTafsirOpened(true)\n      tafsirEl.current.style.maxHeight = tafsirEl.current.scrollHeight + 'px'\n    }\n  }\n\n  return (\n    <div\n      className={`${VerseStyles.verse} relative pt-4 pb-0 bg-white w-full rounded-xl`}\n    >\n      <div className=\"px-4\">\n        {/* Number */}\n        <div className=\"h-8 w-8 mr-2 flex justify-center items-center bg-green-400 rounded-full text-white font-bold absolute -left-2 -top-2\">\n          <p>{verse.number.inSurah}</p>\n        </div>\n\n        {/* Text Arab */}\n        <p className={`${VerseStyles.textArab} text-right`}>\n          {verse.text.arab}\n        </p>\n      </div>\n\n      <div className=\"px-4\">\n        {/* Transliteration */}\n        <p className=\"mt-3 md:text-lg text-gray-700\">\n          {verse.text.transliteration['en']}\n        </p>\n\n        {/* Translation */}\n        <div className=\"mt-2 text-gray-500 \">\n          <span>&quot;{verse.translation[lang]}&quot;</span>\n        </div>\n\n        {/* Audio */}\n        <audio controls className=\"mt-3 w-full\">\n          <source src={verse.audio.primary} type=\"audio/mp3\"></source>\n        </audio>\n      </div>\n\n      {/* Tafsir */}\n      <div className=\"mt-4 border-t overflow-hidden rounded-b-xl\">\n        {/* Toggle */}\n        <div\n          className=\"py-2 px-4 flex justify-between items-center border-gray-200 cursor-pointer hover:bg-gray-200 transition-colors\"\n          onClick={toggleTafsir}\n        >\n          {/* Text */}\n          <span className=\"text-gray-700\">\n            {tafsirOpened ? t('hide_tafsir') : t('show_tafsir')}\n          </span>\n\n          {/* Icon */}\n          <i\n            className={`mdi mdi-${\n              tafsirOpened ? 'chevron-down' : 'chevron-up'\n            } text-xl`}\n          ></i>\n        </div>\n\n        {/* Text */}\n        <div\n          ref={tafsirEl}\n          className={`${VerseStyles.tafsir} ${\n            tafsirOpened ? 'mb-3' : 'mb-0'\n          } tafsir text-gray-500 italic px-4`}\n        >\n          {verse.tafsir[lang]\n            ? verse.tafsir[lang].short\n            : verse.tafsir['id'].short}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nVerse.propTypes = {\n  verse: PropTypes.object.isRequired,\n  lang: PropTypes.string.isRequired,\n}\n\nexport default connect(mapStateToProps)(Verse)\n","import { useEffect, useState, useCallback, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { findSurahByNumber } from 'store/modules/main/getter'\nimport { fetchSurah } from 'store/modules/main/actions'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\nimport Verse from 'components/Verse/Verse'\n\nconst mapStateToProps = (state) => ({\n  findSurahByNumber: (number) => findSurahByNumber(state)(number),\n  lang: state.global.lang,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchSurah: (number) => dispatch(fetchSurah(number)),\n})\n\nfunction Surah({ lang, findSurahByNumber, fetchSurah }) {\n  const { t } = useTranslation()\n\n  const { number } = useParams()\n  const [loading, setLoading] = useState(true)\n\n  const surah = useMemo(() => findSurahByNumber(number), [loading])\n\n  const getSurah = useCallback(async () => {\n    try {\n      await fetchSurah(number)\n    } catch (err) {\n      alert('Failed to fetch surah')\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!surah && loading) {\n      getSurah()\n    }\n  }, [surah, loading])\n\n  // Loader.\n  if (!surah && loading) {\n    return (\n      <div className=\"text-green-800 text-xl lg:text-2xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n        <i className=\"mdi mdi-loading mdi-spin mr-3\"></i>\n        <span>Fetching surah...</span>\n      </div>\n    )\n  }\n\n  // Not found.\n  if (!surah && !loading) {\n    return (\n      <div className=\"text-center text-3xl text-green-800 mt-20\">\n        <i className=\"mdi mdi-emoticon-sad-outline mr-2\"></i>\n        <span>Surah Not Found.</span>\n      </div>\n    )\n  }\n\n  // Set title\n  document.title = surah.name.transliteration[lang]\n\n  return (\n    <div className=\"mx-auto lg:4/5 xl:w-3/5\">\n      {/* Surah */}\n      <div className=\"p-4 bg-white w-full rounded-xl\">\n        <div className=\"flex justify-between\">\n          {/* Number */}\n          <div className=\"h-8 w-8 flex justify-center items-center bg-green-400 rounded-full text-white font-bold\">\n            <p>{surah.number}</p>\n          </div>\n\n          <div className=\"flex flex-col items-end\">\n            {/* Name in arab */}\n            <p className=\"text-4xl\">{surah.name.short}</p>\n\n            {/* Transliteration */}\n            <p className=\"mt-1 text-xl text-gray-700\">\n              {surah.name.transliteration[lang]}\n            </p>\n\n            <div className=\"text-gray-500\">\n              {/* Translation */}\n              <span>&ldquo;{surah.name.translation[lang]}&ldquo;</span>\n\n              {/* Verses */}\n              <span className=\"ml-1\">\n                ({surah.numberOfVerses} {t('t.verse')})\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Tafsir */}\n        <div className=\"mt-2\">Tafsir: </div>\n        <div className=\"tafsir text-gray-500 italic\">\n          {surah.tafsir[lang] ? surah.tafsir[lang] : surah.tafsir['id']}\n        </div>\n      </div>\n\n      {/* Verse Text */}\n      <div className=\"mt-2 mb-3 text-green-800 text-2xl capitalize\">\n        {t('t.verse')}:\n      </div>\n\n      {/* List of verse */}\n      <div className=\"flex flex-col space-y-5\">\n        {surah.verses.map((verse, index) => (\n          <Verse key={index} verse={verse} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nSurah.propTypes = {\n  lang: PropTypes.string.isRequired,\n  fetchSurah: PropTypes.func.isRequired,\n  findSurahByNumber: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Surah)\n","import Home from 'pages/Home/Home'\nimport Surah from 'pages/Surah/Surah'\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: Home,\n  },\n  {\n    path: '/surah/:number/:surah',\n    exact: true,\n    component: Surah,\n  },\n]\n\nexport default routes\n","import quranApi from 'api/quranApi'\nimport { SET_LIST, SET_SURAH } from './actionTypes'\n\nexport const setList = (list) => ({\n  type: SET_LIST,\n  payload: list,\n})\n\nexport const setSurah = (surah) => ({\n  type: SET_SURAH,\n  payload: surah,\n})\n\nexport const fetchQuran = () => {\n  return async (dispatch) => {\n    try {\n      const res = await quranApi.list()\n      const { data } = res\n\n      dispatch(setList(data.data))\n\n      return Promise.resolve(res)\n    } catch (err) {\n      return Promise.reject(err)\n    }\n  }\n}\n\nexport const fetchSurah = (number) => {\n  return async (dispatch) => {\n    try {\n      const res = await quranApi.surah(number)\n      const { data } = res\n\n      dispatch(setSurah(data.data))\n\n      return Promise.resolve(res)\n    } catch (err) {\n      return Promise.reject(err)\n    }\n  }\n}\n","export const SET_LANG = 'SET_LANG'\n","import { SET_LANG } from './actionTypes'\n\nexport const setLang = (lang) => ({\n  type: SET_LANG,\n  payload: lang,\n})\n","function Loader() {\n  return (\n    <div className=\"text-center text-green-800 fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n      <i className=\"mdi mdi-loading mdi-spin text-5xl\"></i>\n      <div className=\"mt-4\">Creating App..</div>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useCallback, useState } from 'react'\nimport { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchQuran } from 'store/modules/main/actions'\nimport { setLang } from 'store/modules/global/actions'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\nimport InitialLoader from 'components/InitialLoader/InitialLoader'\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchQuran: () => dispatch(fetchQuran()),\n  setLang: (lang) => dispatch(setLang(lang)),\n})\n\nfunction Tasks({ children, fetchQuran, setLang }) {\n  const { i18n } = useTranslation()\n  const [tasks, setTasks] = useState(['fetchQuran', 'setCurrentLang'])\n\n  const getQuran = useCallback(async () => {\n    fetchQuran()\n      .catch(() => {\n        alert('Failed to fetch quran')\n      })\n      .finally(() => {\n        setTasks((prev) => {\n          const clone = [...prev]\n          clone.splice(clone.indexOf('fetchQuran'), 1)\n\n          return clone\n        })\n      })\n  }, [])\n\n  const setCurrentLang = useCallback(() => {\n    const currentLang = localStorage.getItem('lang')\n\n    if (currentLang) {\n      setLang(currentLang)\n      i18n.changeLanguage(currentLang)\n    }\n\n    setTasks((prev) => {\n      const clone = [...prev]\n      clone.splice(clone.indexOf('setCurrentLang'), 1)\n\n      return clone\n    })\n  })\n\n  useEffect(() => {\n    if (tasks.length) {\n      // Fetch Quran\n      if (tasks.includes('fetchQuran')) {\n        getQuran()\n      }\n\n      // Set current lang\n      if (tasks.includes('setCurrentLang')) {\n        setCurrentLang()\n      }\n    }\n  }, [tasks])\n\n  return tasks.length ? <InitialLoader /> : children\n}\n\nTasks.propTypes = {\n  children: PropTypes.node,\n  setLang: PropTypes.func.isRequired,\n  fetchQuran: PropTypes.func.isRequired,\n}\n\nexport default connect(null, mapDispatchToProps)(Tasks)\n","import { useState, useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { setLang } from 'store/modules/global/actions'\nimport { useTranslation } from 'react-i18next'\nimport PropTypes from 'prop-types'\n\nconst mapStateToProps = ({ global }) => ({\n  lang: global.lang,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLang: (lang) => dispatch(setLang(lang)),\n})\n\nfunction Header({ lang, setLang }) {\n  const { i18n } = useTranslation()\n\n  const [selectedLang, setSelectedLang] = useState(lang)\n\n  const langChangeHandler = useCallback((e) => {\n    const newLang = e.target.value\n\n    // Change lang state.\n    setLang(newLang)\n  })\n\n  useEffect(() => {\n    // Change lang local input.\n    setSelectedLang(lang)\n\n    // Change lang in i18n.\n    i18n.changeLanguage(lang)\n\n    // Set lang in local storage.\n    localStorage.setItem('lang', lang)\n  }, [lang])\n\n  return (\n    <div className=\"py-3 mb-5 flex justify-between\">\n      {/* Logo */}\n      <Link to=\"/\">\n        <p className=\"m-0 text-2xl text-green-800\">Al-Quran Digital</p>\n      </Link>\n\n      {/* Lang */}\n      <select\n        className=\"bg-white py-2 px-3 rounded-md focus:outline-none focus:ring focus:ring-green-500 cursor-pointer transition-all\"\n        onChange={langChangeHandler}\n        value={selectedLang}\n      >\n        <option value=\"en\">English</option>\n        <option value=\"id\">Indonesia</option>\n      </select>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  lang: PropTypes.string.isRequired,\n  setLang: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport routes from 'routes/index'\nimport Tasks from 'components/Tasks/Tasks'\nimport Header from 'components/Header/Header'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App bg-green-50 pb-10 w-full min-h-screen\">\n        <section className=\"container mx-auto px-3 md:px-0\">\n          {/* Tasks */}\n          <Tasks>\n            {/* Header */}\n            <Header />\n\n            {/* Routes */}\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                ></Route>\n              ))}\n            </Switch>\n          </Tasks>\n        </section>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const globalState = {\r\n  lang: 'en',\r\n}\r\n\r\nexport default globalState\r\n","import { SET_LANG } from './actionTypes'\nimport globalState from './state'\n\nconst globalReducer = (state = globalState, { type, payload }) => {\n  switch (type) {\n    case SET_LANG:\n      return {\n        ...state,\n        lang: payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default globalReducer\n","const mainState = {\n  list: [],\n  surah: {},\n}\n\nexport default mainState\n","import { SET_LIST, SET_SURAH } from './actionTypes'\nimport mainState from './state'\n\nconst mainReducer = (state = mainState, { type, payload }) => {\n  switch (type) {\n    case SET_LIST:\n      return {\n        ...state,\n        list: payload,\n      }\n\n    case SET_SURAH:\n      return {\n        ...state,\n        surah: {\n          ...state.surah,\n          [payload.number]: payload,\n        },\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default mainReducer\n","import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport globalReducer from './modules/global/reducer'\nimport mainReducer from './modules/main/reducer'\n\nconst reducer = combineReducers({\n  global: globalReducer,\n  main: mainReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './i18n'\r\nimport './index.scss'\r\nimport '@mdi/font/css/materialdesignicons.min.css'\r\nimport App from './App'\r\nimport store from 'store/store'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}