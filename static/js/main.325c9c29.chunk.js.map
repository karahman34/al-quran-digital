{"version":3,"sources":["components/Verse/Verse.module.scss","i18n.js","components/Search/Search.js","components/Surah/Surah.js","components/ListSurah/ListSurah.js","pages/Home/Home.js","store/modules/main/getter.js","api/quranApi.js","store/modules/main/actionTypes.js","components/Verse/Verse.js","pages/Surah/Surah.js","routes/index.js","store/modules/main/actions.js","store/modules/global/actionTypes.js","store/modules/global/actions.js","components/InitialLoader/InitialLoader.js","components/Tasks/Tasks.js","assets/quran.png","components/Header/Header.js","App.js","store/modules/global/state.js","store/modules/global/reducer.js","store/modules/main/state.js","store/modules/main/reducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["module","exports","i18n","use","initReactI18next","init","resources","en","translation","hide_tafsir","show_tafsir","id","lng","interpolation","escapeValue","Search","onSearch","t","useTranslation","className","type","placeholder","onChange","connect","state","lang","global","surah","useState","tafsir","tafsirExceedMax","useMemo","length","to","number","name","transliteration","toLowerCase","replace","short","numberOfVerses","substr","ListSurah","list","map","main","filterSurah","q","filter","includes","listSurah","setListSurah","useEffect","document","title","process","e","target","value","filteredSurah","baseURL","quranApi","axios","get","ayat","SET_LIST","SET_SURAH","verse","tafsirOpened","setTafsirOpened","tafsirEl","useRef","VerseStyles","inSurah","textArab","text","arab","controls","src","audio","primary","onClick","current","style","maxHeight","scrollHeight","ref","routes","path","exact","component","Home","findSurahByNumber","dispatch","fetchSurah","a","res","data","payload","Promise","resolve","reject","useParams","loading","setLoading","getSurah","useCallback","alert","verses","index","SET_LANG","setLang","Loader","fetchQuran","children","tasks","setTasks","getQuran","catch","finally","prev","clone","splice","indexOf","setCurrentLang","currentLang","localStorage","getItem","changeLanguage","InitialLoader","selectedLang","setSelectedLang","navbarEl","selectLangEl","langChangeHandler","newLang","listenScrollEvent","addEventListener","window","scrollY","classList","add","remove","setItem","Logo","alt","App","basename","route","globalState","globalReducer","mainState","mainReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.325c9c29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"verse\":\"Verse_verse__1NFX_\",\"tafsir\":\"Verse_tafsir__7ipU-\",\"textArab\":\"Verse_textArab__2ZSdE\"};","import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      'home.header.search': 'Find Surah',\r\n      'c.search.placeholder': 'Insert a keyword..',\r\n      't.see_more': 'See More',\r\n      't.verse': 'verses',\r\n      'list.not_found': \"Sorry we can't find anything..\",\r\n      hide_tafsir: 'Hide Tafsir',\r\n      show_tafsir: 'Show Tafsir',\r\n    },\r\n  },\r\n  id: {\r\n    translation: {\r\n      'home.header.search': 'Cari Surat',\r\n      'c.search.placeholder': 'Masukan kata kunci..',\r\n      't.see_more': 'Selengkapnya',\r\n      't.verse': 'ayat',\r\n      'list.not_found': 'Maaf kami tidak bisa menemukan apapun..',\r\n      hide_tafsir: 'Tutup Tafsir',\r\n      show_tafsir: 'Tampilkan Tafsir',\r\n    },\r\n  },\r\n}\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  })\r\n\r\nexport default i18n\r\n","import { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Search({ onSearch }) {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className=\"relative w-full md:w-3/5 mx-auto\">\r\n      {/* Icon */}\r\n      <i className=\"mdi mdi-magnify text-xl text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2\"></i>\r\n\r\n      {/* Input */}\r\n      <input\r\n        type=\"text\"\r\n        className=\"px-3 pl-10 py-2 w-full md:text-lg rounded-md focus:outline-none focus:ring focus:ring-green-500 transition-all\"\r\n        placeholder={t('c.search.placeholder')}\r\n        onChange={onSearch}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nSearch.propTypes = {\r\n  onSearch: PropTypes.func,\r\n}\r\n\r\nexport default Search\r\n","import { useMemo, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.global.lang,\r\n})\r\n\r\nfunction Surah({ surah, lang }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [tafsir] = useState(\r\n    surah.tafsir[lang] ? surah.tafsir[lang] : surah.tafsir['id']\r\n  )\r\n\r\n  const tafsirExceedMax = useMemo(() => {\r\n    return tafsir.length > 200\r\n  })\r\n\r\n  return (\r\n    <Link\r\n      to={`/surah/${surah.number}/${surah.name.transliteration[lang]\r\n        .toLowerCase()\r\n        .replace(/[^a-zA-Z-]/g, '')}`}\r\n    >\r\n      <div className=\"relative p-4 bg-white rounded-2xl transition-all hover:border-2 hover:border-green-400\">\r\n        <div className=\"flex justify-between items-center\">\r\n          {/* Number */}\r\n          <div className=\"float-left h-8 w-8 rounded-full text-white bg-green-400 number flex justify-center items-center font-bold\">\r\n            {surah.number}\r\n          </div>\r\n\r\n          {/* Name in arab */}\r\n          <div className=\"name-arab text-right text-arab text-4xl\">\r\n            {surah.name.short}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Transliteration */}\r\n        <div className=\"name text-gray-700 text-right text-lg\">\r\n          {surah.name.transliteration[lang]}\r\n        </div>\r\n\r\n        {/* Verses */}\r\n        <div className=\"text-gray-500 ml-1 text-right\">\r\n          ({surah.numberOfVerses} {t('t.verse')})\r\n        </div>\r\n\r\n        {/* Translation */}\r\n        <p className=\"mt-1\">Translation: </p>\r\n        <div className=\"translation text-gray-500\">\r\n          <span>{surah.name.translation[lang]}</span>\r\n        </div>\r\n\r\n        {/* Tafsir */}\r\n        <div className=\"mt-2\">Tafsir: </div>\r\n        <div className=\"tafsir text-gray-500\">\r\n          <span>{tafsir.substr(0, 200)}..</span>\r\n          {tafsirExceedMax && (\r\n            <span className=\"text-gray-800 ml-2\">{t('t.see_more')}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nSurah.propTypes = {\r\n  lang: PropTypes.string.isRequired,\r\n  surah: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Surah)\r\n","import { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport Surah from 'components/Surah/Surah'\r\n\r\nfunction ListSurah({ list }) {\r\n  const { t } = useTranslation()\r\n\r\n  if (!list.length) {\r\n    return (\r\n      <div className=\"mt-8 text-center w-full text-xl lg:text-2xl text-green-800\">\r\n        <i className=\"mdi mdi-emoticon-sad-outline mr-2\"></i>\r\n        <span>{t('list.not_found')}</span>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5\">\r\n        {list.map((surah) => (\r\n          <Surah key={surah.number} surah={surah} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nListSurah.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ListSurah\r\n","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport Search from 'components/Search/Search'\r\nimport ListSurah from 'components/ListSurah/ListSurah'\r\nimport { filterSurah } from 'store/modules/main/getter'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.main.list,\r\n  lang: state.global.lang,\r\n  filterSurah: (q) => filterSurah(state)(q),\r\n})\r\n\r\nfunction Home({ list, filterSurah }) {\r\n  const { t } = useTranslation()\r\n\r\n  const [listSurah, setListSurah] = useState(list)\r\n\r\n  function onSearch(e) {\r\n    const q = e.target.value\r\n\r\n    if (q.length < 1) {\r\n      setListSurah(list)\r\n    } else {\r\n      const filteredSurah = filterSurah(q)\r\n\r\n      setListSurah(filteredSurah)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line no-undef\r\n    document.title = process.env.REACT_APP_TITLE\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"mb-1 md:mb-4 text-2xl md:text-3xl lg:text-4xl text-green-700 text-center\">\r\n        <i className=\"mdi mdi-magnify mr-2\"></i>\r\n        {t('home.header.search')}\r\n      </p>\r\n\r\n      {/* Search */}\r\n      <Search onSearch={onSearch} />\r\n\r\n      {/* List Surah */}\r\n      <ListSurah list={listSurah}></ListSurah>\r\n    </div>\r\n  )\r\n}\r\n\r\nHome.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  filterSurah: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","export const findSurahByNumber = (state) => (number) => state.main.surah[number]\r\n\r\nexport const filterSurah = (state) => (q) =>\r\n  state.main.list.filter((surah) => {\r\n    const { translation, transliteration } = surah.name\r\n    const tafsir = surah.tafsir\r\n\r\n    // Find by transliteration\r\n    if (\r\n      transliteration.en.toLowerCase().includes(q) ||\r\n      transliteration.id.toLowerCase().includes(q)\r\n    ) {\r\n      return surah\r\n    }\r\n\r\n    // Find by translation\r\n    if (\r\n      translation.en.toLowerCase().includes(q) ||\r\n      translation.id.toLowerCase().includes(q)\r\n    ) {\r\n      return surah\r\n    }\r\n\r\n    // Find by tafsir\r\n    if (tafsir.id.toLowerCase().includes(q)) {\r\n      return surah\r\n    }\r\n  })\r\n","import axios from 'axios'\r\n\r\nconst baseURL = 'https://api.quran.sutanlab.id'\r\n\r\nconst quranApi = {\r\n  list() {\r\n    return axios.get(`${baseURL}/surah`)\r\n  },\r\n  surah(number) {\r\n    return axios.get(`${baseURL}/surah/${number}`)\r\n  },\r\n  ayat(number, ayat) {\r\n    return axios.get(`${baseURL}/surah/${number}/${ayat}`)\r\n  },\r\n}\r\n\r\nexport default quranApi\r\n","export const SET_LIST = 'SET_LIST'\r\nexport const SET_SURAH = 'SET_SURAH'\r\n","import { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport VerseStyles from './Verse.module.scss'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.global.lang,\r\n})\r\n\r\nfunction Verse({ verse, lang }) {\r\n  const { t } = useTranslation()\r\n  const [tafsirOpened, setTafsirOpened] = useState(false)\r\n\r\n  const tafsirEl = useRef(null)\r\n\r\n  function toggleTafsir() {\r\n    if (tafsirOpened) {\r\n      setTafsirOpened(false)\r\n      tafsirEl.current.style.maxHeight = 0\r\n    } else {\r\n      setTafsirOpened(true)\r\n      tafsirEl.current.style.maxHeight = tafsirEl.current.scrollHeight + 'px'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${VerseStyles.verse} relative pt-4 pb-0 bg-white w-full rounded-xl`}\r\n    >\r\n      <div className=\"px-4\">\r\n        {/* Number */}\r\n        <div className=\"h-8 w-8 mr-2 flex justify-center items-center bg-green-400 rounded-full text-white font-bold absolute -left-2 -top-2\">\r\n          <p>{verse.number.inSurah}</p>\r\n        </div>\r\n\r\n        {/* Text Arab */}\r\n        <p className={`${VerseStyles.textArab} text-right`}>\r\n          {verse.text.arab}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"px-4\">\r\n        {/* Transliteration */}\r\n        <p className=\"mt-3 md:text-lg text-gray-700\">\r\n          {verse.text.transliteration['en']}\r\n        </p>\r\n\r\n        {/* Translation */}\r\n        <div className=\"mt-2 text-gray-500 \">\r\n          <span>&quot;{verse.translation[lang]}&quot;</span>\r\n        </div>\r\n\r\n        {/* Audio */}\r\n        <audio controls className=\"mt-3 w-full\">\r\n          <source src={verse.audio.primary} type=\"audio/mp3\"></source>\r\n        </audio>\r\n      </div>\r\n\r\n      {/* Tafsir */}\r\n      <div className=\"mt-4 border-t overflow-hidden rounded-b-xl\">\r\n        {/* Toggle */}\r\n        <div\r\n          className=\"py-2 px-4 flex justify-between items-center border-gray-200 cursor-pointer hover:bg-gray-200 transition-colors\"\r\n          onClick={toggleTafsir}\r\n        >\r\n          {/* Text */}\r\n          <span className=\"text-gray-700\">\r\n            {tafsirOpened ? t('hide_tafsir') : t('show_tafsir')}\r\n          </span>\r\n\r\n          {/* Icon */}\r\n          <i\r\n            className={`mdi mdi-${\r\n              tafsirOpened ? 'chevron-down' : 'chevron-up'\r\n            } text-xl`}\r\n          ></i>\r\n        </div>\r\n\r\n        {/* Text */}\r\n        <div\r\n          ref={tafsirEl}\r\n          className={`${VerseStyles.tafsir} ${\r\n            tafsirOpened ? 'mb-3' : 'mb-0'\r\n          } tafsir text-gray-500 italic px-4`}\r\n        >\r\n          {verse.tafsir[lang]\r\n            ? verse.tafsir[lang].short\r\n            : verse.tafsir['id'].short}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nVerse.propTypes = {\r\n  verse: PropTypes.object.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Verse)\r\n","import { useEffect, useState, useCallback, useMemo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { findSurahByNumber } from 'store/modules/main/getter'\r\nimport { fetchSurah } from 'store/modules/main/actions'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport Verse from 'components/Verse/Verse'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  findSurahByNumber: (number) => findSurahByNumber(state)(number),\r\n  lang: state.global.lang,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchSurah: (number) => dispatch(fetchSurah(number)),\r\n})\r\n\r\nfunction Surah({ lang, findSurahByNumber, fetchSurah }) {\r\n  const { t } = useTranslation()\r\n\r\n  const { number } = useParams()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const surah = useMemo(() => findSurahByNumber(number), [loading])\r\n\r\n  const getSurah = useCallback(async () => {\r\n    try {\r\n      await fetchSurah(number)\r\n    } catch (err) {\r\n      alert('Failed to fetch surah')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!surah && loading) {\r\n      getSurah()\r\n    }\r\n  }, [surah, loading])\r\n\r\n  // Loader.\r\n  if (!surah && loading) {\r\n    return (\r\n      <div className=\"text-green-800 text-xl lg:text-2xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n        <i className=\"mdi mdi-loading mdi-spin mr-3\"></i>\r\n        <span>Fetching surah...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Not found.\r\n  if (!surah && !loading) {\r\n    return (\r\n      <div className=\"text-center text-3xl text-green-800 mt-20\">\r\n        <i className=\"mdi mdi-emoticon-sad-outline mr-2\"></i>\r\n        <span>Surah Not Found.</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Set title\r\n  document.title = surah.name.transliteration[lang]\r\n\r\n  return (\r\n    <div className=\"mx-auto lg:4/5 xl:w-3/5\">\r\n      {/* Surah */}\r\n      <div className=\"p-4 bg-white w-full rounded-xl\">\r\n        <div className=\"flex justify-between\">\r\n          {/* Number */}\r\n          <div className=\"h-8 w-8 flex justify-center items-center bg-green-400 rounded-full text-white font-bold\">\r\n            <p>{surah.number}</p>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col items-end\">\r\n            {/* Name in arab */}\r\n            <p className=\"text-4xl\">{surah.name.short}</p>\r\n\r\n            {/* Transliteration */}\r\n            <p className=\"mt-1 text-xl text-gray-700\">\r\n              {surah.name.transliteration[lang]}\r\n            </p>\r\n\r\n            <div className=\"text-gray-500\">\r\n              {/* Translation */}\r\n              <span>&ldquo;{surah.name.translation[lang]}&ldquo;</span>\r\n\r\n              {/* Verses */}\r\n              <span className=\"ml-1\">\r\n                ({surah.numberOfVerses} {t('t.verse')})\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tafsir */}\r\n        <div className=\"mt-2\">Tafsir: </div>\r\n        <div className=\"tafsir text-gray-500 italic\">\r\n          {surah.tafsir[lang] ? surah.tafsir[lang] : surah.tafsir['id']}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Verse Text */}\r\n      <div className=\"mt-2 mb-3 text-green-800 text-2xl capitalize\">\r\n        {t('t.verse')}:\r\n      </div>\r\n\r\n      {/* List of verse */}\r\n      <div className=\"flex flex-col space-y-5\">\r\n        {surah.verses.map((verse, index) => (\r\n          <Verse key={index} verse={verse} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSurah.propTypes = {\r\n  lang: PropTypes.string.isRequired,\r\n  fetchSurah: PropTypes.func.isRequired,\r\n  findSurahByNumber: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Surah)\r\n","import Home from 'pages/Home/Home'\r\nimport Surah from 'pages/Surah/Surah'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/surah/:number/:surah',\r\n    exact: true,\r\n    component: Surah,\r\n  },\r\n]\r\n\r\nexport default routes\r\n","import quranApi from 'api/quranApi'\r\nimport { SET_LIST, SET_SURAH } from './actionTypes'\r\n\r\nexport const setList = (list) => ({\r\n  type: SET_LIST,\r\n  payload: list,\r\n})\r\n\r\nexport const setSurah = (surah) => ({\r\n  type: SET_SURAH,\r\n  payload: surah,\r\n})\r\n\r\nexport const fetchQuran = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await quranApi.list()\r\n      const { data } = res\r\n\r\n      dispatch(setList(data.data))\r\n\r\n      return Promise.resolve(res)\r\n    } catch (err) {\r\n      return Promise.reject(err)\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchSurah = (number) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await quranApi.surah(number)\r\n      const { data } = res\r\n\r\n      dispatch(setSurah(data.data))\r\n\r\n      return Promise.resolve(res)\r\n    } catch (err) {\r\n      return Promise.reject(err)\r\n    }\r\n  }\r\n}\r\n","export const SET_LANG = 'SET_LANG'\r\n","import { SET_LANG } from './actionTypes'\r\n\r\nexport const setLang = (lang) => ({\r\n  type: SET_LANG,\r\n  payload: lang,\r\n})\r\n","function Loader() {\r\n  return (\r\n    <div className=\"text-center text-green-800 fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n      <i className=\"mdi mdi-loading mdi-spin text-5xl\"></i>\r\n      <div className=\"mt-4\">Creating App..</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useCallback, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuran } from 'store/modules/main/actions'\r\nimport { setLang } from 'store/modules/global/actions'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport InitialLoader from 'components/InitialLoader/InitialLoader'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchQuran: () => dispatch(fetchQuran()),\r\n  setLang: (lang) => dispatch(setLang(lang)),\r\n})\r\n\r\nfunction Tasks({ children, fetchQuran, setLang }) {\r\n  const { i18n } = useTranslation()\r\n  const [tasks, setTasks] = useState(['fetchQuran', 'setCurrentLang'])\r\n\r\n  const getQuran = useCallback(async () => {\r\n    fetchQuran()\r\n      .catch(() => {\r\n        alert('Failed to fetch quran')\r\n      })\r\n      .finally(() => {\r\n        setTasks((prev) => {\r\n          const clone = [...prev]\r\n          clone.splice(clone.indexOf('fetchQuran'), 1)\r\n\r\n          return clone\r\n        })\r\n      })\r\n  }, [])\r\n\r\n  const setCurrentLang = useCallback(() => {\r\n    const currentLang = localStorage.getItem('lang')\r\n\r\n    if (currentLang) {\r\n      setLang(currentLang)\r\n      i18n.changeLanguage(currentLang)\r\n    }\r\n\r\n    setTasks((prev) => {\r\n      const clone = [...prev]\r\n      clone.splice(clone.indexOf('setCurrentLang'), 1)\r\n\r\n      return clone\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (tasks.length) {\r\n      // Fetch Quran\r\n      if (tasks.includes('fetchQuran')) {\r\n        getQuran()\r\n      }\r\n\r\n      // Set current lang\r\n      if (tasks.includes('setCurrentLang')) {\r\n        setCurrentLang()\r\n      }\r\n    }\r\n  }, [tasks])\r\n\r\n  return tasks.length ? <InitialLoader /> : children\r\n}\r\n\r\nTasks.propTypes = {\r\n  children: PropTypes.node,\r\n  setLang: PropTypes.func.isRequired,\r\n  fetchQuran: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Tasks)\r\n","export default __webpack_public_path__ + \"static/media/quran.11d1f382.png\";","import { useState, useCallback, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { setLang } from 'store/modules/global/actions'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport Logo from 'assets/quran.png'\r\n\r\nconst mapStateToProps = ({ global }) => ({\r\n  lang: global.lang,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLang: (lang) => dispatch(setLang(lang)),\r\n})\r\n\r\nfunction Header({ lang, setLang }) {\r\n  const { i18n } = useTranslation()\r\n\r\n  const [selectedLang, setSelectedLang] = useState(lang)\r\n  const navbarEl = useRef(null)\r\n  const selectLangEl = useRef(null)\r\n\r\n  const langChangeHandler = useCallback((e) => {\r\n    const newLang = e.target.value\r\n\r\n    // Change lang state.\r\n    setLang(newLang)\r\n  })\r\n\r\n  const listenScrollEvent = useCallback(() => {\r\n    document.addEventListener('scroll', () => {\r\n      const y = window.scrollY\r\n\r\n      // Set shadow on navbar.\r\n      if (y > 0) {\r\n        // Navbar\r\n        navbarEl.current.classList.add('bg-white')\r\n        navbarEl.current.classList.add('shadow-md')\r\n\r\n        // Select lang\r\n        selectLangEl.current.classList.remove('bg-white')\r\n        selectLangEl.current.classList.add('bg-gray-100')\r\n        selectLangEl.current.classList.add('shadow-sm')\r\n      } else {\r\n        // Navbar\r\n        navbarEl.current.classList.remove('bg-white')\r\n        navbarEl.current.classList.remove('shadow-md')\r\n\r\n        // Select lang\r\n        selectLangEl.current.classList.add('bg-white')\r\n        selectLangEl.current.classList.remove('bg-gray-100')\r\n        selectLangEl.current.classList.remove('shadow-sm')\r\n      }\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    // Change lang local input.\r\n    setSelectedLang(lang)\r\n\r\n    // Change lang in i18n.\r\n    i18n.changeLanguage(lang)\r\n\r\n    // Set lang in local storage.\r\n    localStorage.setItem('lang', lang)\r\n  }, [lang])\r\n\r\n  useEffect(() => {\r\n    // Listen scroll event.\r\n    listenScrollEvent()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      ref={navbarEl}\r\n      className=\"py-2 mb-5 w-full sticky top-0 z-50 transition-all\"\r\n    >\r\n      {/* Container */}\r\n      <div className=\"mx-auto container flex justify-between items-center px-3 md:px-5\">\r\n        {/* Logo */}\r\n        <Link to=\"/\" className=\"flex items-center\">\r\n          <img\r\n            src={Logo}\r\n            alt=\"Quran Digital\"\r\n            className=\"object-cover h-8 w-8 inline-block\"\r\n          />\r\n          <span className=\"ml-2 text-green-700 text-xl font-medium\">\r\n            Quran Digital\r\n          </span>\r\n        </Link>\r\n\r\n        {/* Lang */}\r\n        <select\r\n          className=\"bg-white py-2 px-3 rounded-md focus:outline-none cursor-pointer transition-all hover:bg-gray-200\"\r\n          ref={selectLangEl}\r\n          onChange={langChangeHandler}\r\n          value={selectedLang}\r\n        >\r\n          <option value=\"en\">English</option>\r\n          <option value=\"id\">Indonesia</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  lang: PropTypes.string.isRequired,\r\n  setLang: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport routes from 'routes/index'\r\nimport Tasks from 'components/Tasks/Tasks'\r\nimport Header from 'components/Header/Header'\r\n\r\nfunction App() {\r\n  const [baseURL] = useState(\r\n    // eslint-disable-next-line no-undef\r\n    !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\r\n      ? ''\r\n      : // eslint-disable-next-line no-undef\r\n        process.env.REACT_APP_GH_PAGES_PREFIX\r\n  )\r\n\r\n  return (\r\n    <Router basename={baseURL}>\r\n      <div className=\"App bg-green-50 pb-10 w-full min-h-screen\">\r\n        {/* Tasks */}\r\n        <Tasks>\r\n          {/* Header */}\r\n          <Header />\r\n\r\n          {/* Content */}\r\n          <section className=\"container mx-auto px-5\">\r\n            {/* Routes */}\r\n            <Switch>\r\n              {routes.map((route, index) => (\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  component={route.component}\r\n                ></Route>\r\n              ))}\r\n            </Switch>\r\n          </section>\r\n        </Tasks>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const globalState = {\r\n  lang: 'en',\r\n}\r\n\r\nexport default globalState\r\n","import { SET_LANG } from './actionTypes'\r\nimport globalState from './state'\r\n\r\nconst globalReducer = (state = globalState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_LANG:\r\n      return {\r\n        ...state,\r\n        lang: payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default globalReducer\r\n","const mainState = {\r\n  list: [],\r\n  surah: {},\r\n}\r\n\r\nexport default mainState\r\n","import { SET_LIST, SET_SURAH } from './actionTypes'\r\nimport mainState from './state'\r\n\r\nconst mainReducer = (state = mainState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_LIST:\r\n      return {\r\n        ...state,\r\n        list: payload,\r\n      }\r\n\r\n    case SET_SURAH:\r\n      return {\r\n        ...state,\r\n        surah: {\r\n          ...state.surah,\r\n          [payload.number]: payload,\r\n        },\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default mainReducer\r\n","import { combineReducers, applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport globalReducer from './modules/global/reducer'\r\nimport mainReducer from './modules/main/reducer'\r\n\r\nconst reducer = combineReducers({\r\n  global: globalReducer,\r\n  main: mainReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './i18n'\r\nimport './index.scss'\r\nimport '@mdi/font/css/materialdesignicons.min.css'\r\nimport App from './App'\r\nimport store from 'store/store'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}